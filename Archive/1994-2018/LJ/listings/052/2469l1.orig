#!/usr/bin/perl -T
#
# A simple script to provide remote access to the
# sendmail queue.
# (c) John Blair, jun.97
#   The University Computer Center
#   The University of Alabama at Birmingham
#
# NOTE: The -T flag is used to turn on "Taint"
# checking. This helps to ensure that this script
# is secure.
use CGI;
use CGI::Base;
#
# blank $PATH environmental var
$ENV\{<\#145>PATH'\} 3D "";
#
# command strings (change this if your setup is
# different)
$sendmail_showqueue 3D "/usr/sbin/sendmail -bp";
$sendmail_flush 3D "/usr/sbin/sendmail -q";
$diskspace 3D "/bin/df /dev/hda1";
#
# title string (edit this to match the name of
# your host)
$title_string 3D "Bartleby Sendmail Queue";
#
# create CGI object
$query 3D new CGI;
#
# start outputing response
print $query->header;
print $query->start_html($title_string);
print "<h1>$title_string</h1>";
print "<hr>";
#
# should I first attempt to flush the queue?
if ($query->param('action') eq 'flush') {
	system($sendmail_flush);
}
#
# show sendmail queue
print "<b>Current sendmail queue contents:</b><p>";
if (! &show_cmd_output($sendmail_showqueue)) {
print "<b><a href3D\"?action3Dflush\">
[Flush queue]</a></b><p>";
}
print "<hr>";
#
# show disk space
print "<b>Current disk space:</b><p>";
&show_cmd_output($diskspace);
print "<hr>";
#
# subroutine to run a command and print the output
# to stdout
sub show_cmd_output \{
  my $cmd 3D shift;
  open CMD, "$cmd |";
  my @output 3D <CMD>;
  print "<pre>";
  print join('<br>', html_escape(@output));
  print "</pre>";
  close CMD;
  if ($output[0] 3D~ /empty/) {
	return 1;
  } else {
	return 0;
  }
}
}
