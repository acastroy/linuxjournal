@lay:9045l1.qrk
@fig:Listing 1. Temperature Monitoring with Python Scripting
@cx:---- monitor_temp.py ----<\n>SHUTOFF_TEMP = 50.0<\n>mail_list = ['fake.email<\@>fakedomain.com']<\n><\n>import os, re, smtplib<\n><\n>def send_mail(toaddrs, msg):<\n><\n>    fromaddr = 'sysadmin<\@>fakedomain.com'<\n>    server = smtplib.SMTP('smtp.uq.edu.au')<\n>    server.sendmail(fromaddr, toaddrs, msg)<\n>    server.quit()<\n><\n>f = os.popen('hostname', "r")<\n>hostname = f.readline().split()[0]<\n>svc_proc = hostname[:4] + 'sp' + hostname[4:]<\n>f.close()<\n><\n>f = os.popen("ipmitool -I lan -P password -H %s sensor | grep<\n>'cpu[0-1].memtemp'" % svc_proc, "r")<\n><\n>mail_sent = False<\n><\n>for line in f.readlines():<\n>    if mail_sent:<\n>        break<\n>    tokens = line.split()<\n>    str = tokens[2]<\n><\n>    if str == 'NA':<\n>        temp = 1.0<\n>    else:<\n>        temp = float(str)<\n><\n>    if temp <\>>= SHUTOFF_TEMP:<\n>        msg = 'Re: hot temperature initiated shutdown for %s<\\>n' %<\n>hostname<\n>        msg += 'The CPU memtemp for %s exceeded %.1f.<\\>n' % (hostname,<\n>SHUTOFF_TEMP)<\n>        msg += 'This node has been shutdown.<\\>n'<\n>        for address in mail_list:<\n>            send_mail(address, msg)<\n>        # Clean up scratch and power down<\n>        os.system('rm -rf /scratch/*')<\n>        os.system('/sbin/shutdown now -h')<\n>        mail_sent = True
